{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "osdiskSize": {
            "defaultValue": 128,
            "type": "int"
        },
        "vm_name": {
            "defaultValue": "ihor",
            "type": "string"
        },
        "owner": {
            "defaultValue": "Ihor",
            "type": "string"
        },
        "osAdminUserName": {
            "defaultValue": "admin",
            "type": "string"
        },
        "osAdminPassword": {
            "defaultValue": "admin",
            "type": "string"
        },
        "azureLocation": {
            "defaultValue": "northeurope",
            "type": "string"
        },
        "scriptLocation": {
            "type": "string",
            "metadata": {
                "description": "Location of the setup script."
            },
            "defaultValue": "https://raw.githubusercontent.com/IhorBand/cloud-gaming-vm/main"
        },
        "customData": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "String passed down to the Virtual Machine."
            }
        }
    },
    "variables": {
        "fullVMName": "[concat(parameters('vm_name'), '-nvidia-tesla-gaming-vm')]",
        "publicIPAdressesName": "[concat(variables('fullVMName'), '-ip')]",
        "virtualNetworkName": "[concat(variables('fullVMName'), '-vnet')]",
        "networkInterfaceName": "[concat(variables('fullVMName'), '-ni_z1')]",
        "networkSecurityGroupName": "[concat(variables('fullVMName'), '-nsg')]",
        "osDiskName": "[concat(variables('fullVMName'), '-disk_OsDisk_1')]",
        "scriptFileName": "setup.ps1",
        "zone": "2",
        "scriptParameters": "[concat('-admin_username \"', parameters('osAdminUserName'), '\" -admin_password \"', parameters('osAdminPassword'), '\"')]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2023-05-01",
            "name": "[variables('networkSecurityGroupName')]",
            "location": "[parameters('azureLocation')]",
            "tags": {
                "owner": "[parameters('owner')]",
                "type": "cloud-gaming"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-rdp",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "parsec-server",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8000-8040",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1020,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2023-05-01",
            "name": "[variables('publicIPAdressesName')]",
            "location": "[parameters('azureLocation')]",
            "tags": {
                "owner": "[parameters('owner')]",
                "type": "cloud-gaming"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2023-05-01",
            "name": "[variables('virtualNetworkName')]",
            "location": "[parameters('azureLocation')]",
            "tags": {
                "owner": "[parameters('owner')]",
                "type": "cloud-gaming"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24"
                        }
                    }
                ],
                "enableDdosProtection": false
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2023-03-01",
            "name": "[variables('fullVMName')]",
            "location": "[parameters('azureLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
            ],
            "zones": [
                "[variables('zone')]"
            ],
            "tags": {
                "owner": "[parameters('owner')]",
                "type": "cloud-gaming"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_NC8as_T4_v3"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "microsoftwindowsdesktop",
                        "offer": "windows-11",
                        "sku": "win11-22h2-pro",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[variables('osDiskName')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "deleteOption": "Delete",
                        "diskSizeGB": "[parameters('osdiskSize')]",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        }
                    },
                    "dataDisks": [],
                    "diskControllerType": "SCSI"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('osAdminUserName'), '-gaming')]",
                    "adminUsername": "[parameters('osAdminUserName')]",
                    "adminPassword": "[parameters('osAdminPassword')]",
                    "customData": "[parameters('customData')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]",
                            "properties": {
                                "deleteOption": "Delete"
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": false
                    }
                },
                "licenseType": "Windows_Client",
                "priority": "Spot",
                "evictionPolicy": "Deallocate",
                "billingProfile": {
                    "maxPrice": -1
                }
            },
            "resources": [
                {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(variables('fullVMName'), '/customScript')]",
                    "apiVersion": "2018-06-01",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[variables('fullVMName')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Compute",
                        "type": "CustomScriptExtension",
                        "typeHandlerVersion": "1.10",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "fileUris": [
                                "[concat(parameters('scriptLocation'), '/', variables('ScriptFileName'))]"
                            ],
                            "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -File ', variables('scriptFileName'), ' ', variables('scriptParameters'))]"
                        }
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2023-05-01",
            "name": "[variables('networkInterfaceName')]",
            "location": "[parameters('azureLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAdressesName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
            ],
            "tags": {
                "owner": "[parameters('owner')]",
                "type": "cloud-gaming"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "10.0.0.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAdressesName'))]",
                                "properties": {
                                    "deleteOption": "Delete"
                                }
                            },
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName')), '/subnets/default')]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                }
            }
        }
    ]
}